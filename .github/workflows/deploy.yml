name: Deploy Spring Boot to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        working-directory: cicd # gradlew 파일이 'cicd' 디렉토리 안에 있으므로, 여기서 빌드합니다.

      - name: Clean up old artifact directory # 임시 폴더와 zip 파일 정리
        run: |
          rm -rf codedeploy_artifact # 'codedeploy_artifact' 임시 디렉토리 삭제
          rm -f deploy.zip # 이전 실행에서 남은 'deploy.zip' 파일 삭제

      - name: Prepare deployment package # 배포 패키지 준비
        # 이 스텝은 리포지토리의 루트 디렉토리에서 실행됩니다.
        run: |
          mkdir codedeploy_artifact # 'codedeploy_artifact'라는 새 임시 폴더 생성
          cp cicd/build/libs/*.jar codedeploy_artifact/app.jar # 'cicd' 안의 JAR 파일을 복사
          cp appspec.yml codedeploy_artifact/ # 루트 디렉토리의 appspec.yml을 복사
          # Git 저장소의 'deploy/scripts' 폴더를 'codedeploy_artifact' 안으로 복사
          # 이렇게 하면 최종 ZIP 파일에 'scripts/' 폴더가 루트에 위치
          cp -r deploy/scripts codedeploy_artifact/

          cd codedeploy_artifact # 생성된 'codedeploy_artifact' 폴더로 이동
          # 'codedeploy_artifact' 안의 모든 내용을 상위 폴더(루트)에 'deploy.zip'으로 압축
          zip -r ../deploy.zip ./* - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        # 'Prepare deployment package' 스텝이 루트에서 'deploy.zip'을 만들었으므로,
        # S3 업로드 시 로컬 경로는 'deploy.zip'
        run: |
          aws s3 cp deploy.zip s3://${{ secrets.S3_BUCKET_NAME }}/deploy/deploy.zip

      - name: Create CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name test_cicd \
            --deployment-group-name test-cicd-deploygroup \
            --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},key=deploy/deploy.zip,bundleType=zip \
            --file-exists-behavior OVERWRITE # (선택 사항) 배포 시 파일이 이미 존재할 경우 처리 방식